{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","className","type","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","document","querySelector"],"mappings":"qLAkBeA,G,MAhBK,SAACC,GAAU,IACpBC,EAA+ED,EAA/EC,gBAAiBC,EAA8DF,EAA9DE,iBAAkBC,EAA4CH,EAA5CG,iBAAkBC,EAA0BJ,EAA1BI,OAAQC,EAAkBL,EAAlBK,eACpE,OACA,yBAAKC,UAAU,UACf,0BAAMA,UAAU,eAChB,2BAAOC,KAAK,SAASD,UAAU,8BAA8BE,MAAOJ,EAAQK,SAAUJ,IACtF,4BAAQC,UAAU,+BAA+BE,MAAON,EAAkBO,SAAUN,GAC/EF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,WCN3CE,EAAW,yCA8EFC,EA5EH,WAAM,IAQZC,EAAUC,EARC,EAC+BC,mBAAS,IADxC,mBACRhB,EADQ,KACSiB,EADT,OAEyBD,qBAFzB,mBAERE,EAFQ,KAEMC,EAFN,OAGqBH,qBAHrB,mBAGRI,EAHQ,KAGIC,EAHJ,OAIyBL,qBAJzB,mBAIRM,EAJQ,KAIMC,EAJN,OAKaP,mBAAS,GALtB,mBAKRb,EALQ,KAKAqB,EALA,OAMyCR,oBAAS,GANlD,mBAMRS,EANQ,KAMcC,EANd,KAiDf,OAxCID,GACFV,EAAaZ,EACbW,EAAWX,EAASmB,IAEpBR,EAAWX,EACXY,EAAaZ,EAASmB,GAIxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACS,MAAdT,GAAoC,MAAdE,GACvBQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE7C,CAACF,EAAcE,IAcf,6BACA,yBAAKf,UAAU,WAAf,gCACA,yBAAKA,UAAU,aACf,kBAAC,EAAD,CAAaA,UAAU,GACvBL,gBAAoBA,EACpBC,iBAAoBiB,EACpBhB,iBAAoB,SAAAoC,GAAC,OAAGnB,EAAgBmB,EAAEC,OAAOhC,QACjDJ,OAAoBY,EACpBX,eAnBF,SAAgCkC,GAC9Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,MAoBxB,yBAAKrB,UAAU,UAAf,KAEA,kBAAC,EAAD,CACAL,gBAAqBA,EACrBC,iBAAqBmB,EACrBlB,iBAAqB,SAAAoC,GAAC,OAAIjB,EAAciB,EAAEC,OAAOhC,QACjDJ,OAAqBW,EACrBV,eAxBF,SAA8BkC,GAC5Bd,EAAUc,EAAEC,OAAOhC,OACnBmB,GAAwB,SC/C5Bc,IAASC,OACP,kBAAC,EAAD,MAAOC,SAASC,cAAc,W","file":"static/js/main.e3dfedfe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst CurrencyRow = (props) =>{\r\n    const {currencyOptions, selectedCurrency, onChangeCurrency, amount, onChangeAmount} = props \r\n    return (\r\n    <div className=\"d-flex\">\r\n    <form className=\"form-inline\">  \r\n    <input type=\"number\" className=\"input form-control d-inline\" value={amount} onChange={onChangeAmount}/>\r\n    <select className=\"d-inline form-control select\" value={selectedCurrency} onChange={onChangeCurrency}>\r\n        {currencyOptions.map(option =>\r\n            <option key={option} value={option}>{option}</option>\r\n        )}\r\n    </select>\r\n    </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyRow;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nconst App = () =>{\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount;\n  if (amountInFromCurrency){\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  }else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n\n  useEffect(()=>{\n    fetch(BASE_URL)\n      .then(res=>res.json())\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      })\n  }, [])\n\n  useEffect(()=>{\n    if(fromCurrency!=null && toCurrency != null){\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  },[fromCurrency, toCurrency])\n\n\n  function handleFromAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <div>\n    <div className=\"heading\">Live Exchange Rate Convertor</div>\n    <div className=\"container\">\n    <CurrencyRow className=\"\"\n    currencyOptions  = {currencyOptions} \n    selectedCurrency = {fromCurrency} \n    onChangeCurrency = {e =>setFromCurrency(e.target.value)}\n    amount           = {fromAmount}\n    onChangeAmount   = {handleFromAmountChange}\n    />\n\n    <div className=\"equals\">=</div>\n    \n    <CurrencyRow \n    currencyOptions   = {currencyOptions}\n    selectedCurrency  = {toCurrency} \n    onChangeCurrency  = {e => setToCurrency(e.target.value)}\n    amount            = {toAmount}\n    onChangeAmount    = {handleToAmountChange}\n    />    \n    </div>\n    </div>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App/>,document.querySelector('#root')\n)"],"sourceRoot":""}